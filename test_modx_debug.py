#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ MODX API
"""
import asyncio
import aiohttp
import ssl
import json

async def test_modx_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º MODX API"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL
    ssl_context = ssl.create_default_context()
    ssl_context.check_hostname = False
    ssl_context.verify_mode = ssl.CERT_NONE
    
    connector = aiohttp.TCPConnector(ssl=ssl_context)
    
    async with aiohttp.ClientSession(
        connector=connector,
        timeout=aiohttp.ClientTimeout(total=10)
    ) as session:
        
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º MODX API...")
        
        # –¢–µ—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:")
        try:
            async with session.get("https://drazhin.by/api/categories.php") as response:
                print(f"   Status: {response.status}")
                if response.status == 200:
                    data = await response.json()
                    print(f"   –î–∞–Ω–Ω—ã–µ: {json.dumps(data[:2], ensure_ascii=False, indent=2)}")
                else:
                    text = await response.text()
                    print(f"   –û—à–∏–±–∫–∞: {text}")
        except Exception as e:
            print(f"   –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        
        # –¢–µ—Å—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã:")
        try:
            async with session.get("https://drazhin.by/api/products.php") as response:
                print(f"   Status: {response.status}")
                if response.status == 200:
                    data = await response.json()
                    print(f"   –î–∞–Ω–Ω—ã–µ: {json.dumps(data[:1], ensure_ascii=False, indent=2)}")
                else:
                    text = await response.text()
                    print(f"   –û—à–∏–±–∫–∞: {text}")
        except Exception as e:
            print(f"   –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        
        # –¢–µ—Å—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
        print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π 17:")
        try:
            async with session.get("https://drazhin.by/api/products.php?category=17") as response:
                print(f"   Status: {response.status}")
                if response.status == 200:
                    data = await response.json()
                    print(f"   –î–∞–Ω–Ω—ã–µ: {json.dumps(data[:1], ensure_ascii=False, indent=2)}")
                else:
                    text = await response.text()
                    print(f"   –û—à–∏–±–∫–∞: {text}")
        except Exception as e:
            print(f"   –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

if __name__ == "__main__":
    asyncio.run(test_modx_api())

