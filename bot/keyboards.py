from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from .config import SecureConfig

# –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config = SecureConfig()
BASE_WEBAPP_URL = config.BASE_WEBAPP_URL

# –ë–∞–∑–æ–≤—ã–µ URL –¥–ª—è reply-–∫–Ω–æ–ø–æ–∫ (—É–∫–∞–∑–∞–Ω—ã —è–≤–Ω–æ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é)
REPLY_BASE_WEBAPP_URL = "https://miniapp.drazhin.by/bot-app/"
REPLY_MENU_URL = f"{REPLY_BASE_WEBAPP_URL}?view=categories#"
REPLY_CART_URL = f"{REPLY_BASE_WEBAPP_URL}?view=cart#"


def _build_web_app_url(view: str) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç URL –¥–ª—è inline-–∫–Ω–æ–ø–æ–∫ —Å —É—á—ë—Ç–æ–º –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ query —É BASE_WEBAPP_URL."""
    separator = '&' if '?' in BASE_WEBAPP_URL else '?'
    return f"{BASE_WEBAPP_URL}{separator}view={view}"

# Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
back_to_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ],
    resize_keyboard=True,
    is_persistent=True,
    one_time_keyboard=False,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ ‚¨áÔ∏è"
)


def generate_reply_main_menu(cart_items_count: int = 0) -> ReplyKeyboardMarkup:
    cart_button_text = (
        f"üõí –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É ({cart_items_count})" if cart_items_count > 0 else "üõí –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É"
    )

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ù–∞—à–µ –º–µ–Ω—é", web_app=WebAppInfo(url=REPLY_MENU_URL))],
            [KeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", web_app=WebAppInfo(url=REPLY_CART_URL))],
            [
                KeyboardButton(text="–ù–∞—à–∏ –∞–¥—Ä–µ—Å–∞"),
                KeyboardButton(text="–û –¥–æ—Å—Ç–∞–≤–∫–µ"),
                KeyboardButton(text="–û –Ω–∞—Å")
            ]
        ],
        resize_keyboard=True,
        is_persistent=True,
        one_time_keyboard=False,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ ‚¨áÔ∏è"
    )
    return keyboard


def generate_inline_main_menu(cart_items_count: int = 0) -> InlineKeyboardMarkup:
    cart_button_text = (
        f"üõí –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É ({cart_items_count})" if cart_items_count > 0 else "üõí –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É"
    )

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="–ù–∞—à–µ –º–µ–Ω—é",
                web_app=WebAppInfo(url=_build_web_app_url("categories"))
            )
        ],
        [
            InlineKeyboardButton(
                text=cart_button_text,
                web_app=WebAppInfo(url=_build_web_app_url("cart"))
            )
        ],
        [
            InlineKeyboardButton(text="–ù–∞—à–∏ –∞–¥—Ä–µ—Å–∞", callback_data="info:addresses"),
            InlineKeyboardButton(text="–û –¥–æ—Å—Ç–∞–≤–∫–µ", callback_data="info:delivery"),
            InlineKeyboardButton(text="–û –Ω–∞—Å", callback_data="info:about"),
        ]
    ])
    return keyboard
